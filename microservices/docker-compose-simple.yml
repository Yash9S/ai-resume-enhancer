services:
  # PostgreSQL Database
  database:
    image: postgres:15
    environment:
      POSTGRES_DB: ai_resume_parser_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (caching and job queues)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Extraction Service (Python FastAPI)
  ai-extraction-service:
    build: ./ai-extraction-service
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Simple Frontend (placeholder)
  frontend:
    build: ./frontend
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # API Gateway (Nginx)
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:80"
    depends_on:
      - ai-extraction-service
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: